// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// This file was generated by protogen. DO NOT EDIT.

package com.strongdm.api;

import java.util.Date;

/** AccountResource represents an individual access grant of a Account to a Resource. */
public class AccountResource {
  private String accountGrantId;
  /**
   * The unique identifier of the AccountGrant through which the Account was granted access to the
   * Resource. If empty, access was not granted through an AccountGrant.
   */
  public String getAccountGrantId() {
    return this.accountGrantId;
  }
  /**
   * The unique identifier of the AccountGrant through which the Account was granted access to the
   * Resource. If empty, access was not granted through an AccountGrant.
   */
  public void setAccountGrantId(String in) {
    this.accountGrantId = in;
  }

  private String accountId;
  /** The unique identifier of the Account to which access is granted. */
  public String getAccountId() {
    return this.accountId;
  }
  /** The unique identifier of the Account to which access is granted. */
  public void setAccountId(String in) {
    this.accountId = in;
  }

  private Date expiresAt;
  /** The time at which access will expire. If empty, this access has no expiration. */
  public Date getExpiresAt() {
    return this.expiresAt;
  }
  /** The time at which access will expire. If empty, this access has no expiration. */
  public void setExpiresAt(Date in) {
    this.expiresAt = in;
  }

  private Date grantedAt;
  /**
   * The most recent time at which access was granted. If access was granted, revoked, and granted
   * again, this will reflect the later time.
   */
  public Date getGrantedAt() {
    return this.grantedAt;
  }
  /**
   * The most recent time at which access was granted. If access was granted, revoked, and granted
   * again, this will reflect the later time.
   */
  public void setGrantedAt(Date in) {
    this.grantedAt = in;
  }

  private String resourceId;
  /** The unique identifier of the Resource to which access is granted. */
  public String getResourceId() {
    return this.resourceId;
  }
  /** The unique identifier of the Resource to which access is granted. */
  public void setResourceId(String in) {
    this.resourceId = in;
  }

  private String roleId;
  /**
   * The unique identifier of the Role through which the Account was granted access to the Resource.
   * If empty, access was not granted through an AccountAttachment to a Role.
   */
  public String getRoleId() {
    return this.roleId;
  }
  /**
   * The unique identifier of the Role through which the Account was granted access to the Resource.
   * If empty, access was not granted through an AccountAttachment to a Role.
   */
  public void setRoleId(String in) {
    this.roleId = in;
  }
}
