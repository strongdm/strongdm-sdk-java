// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protogen. DO NOT EDIT.

package com.strongdm.api;

import java.util.Date;

/** ManagedSecret contains details about managed secret */
public class ManagedSecret {
  private String config;
  /** public part of the secret value */
  public String getConfig() {
    return this.config;
  }
  /** public part of the secret value */
  public void setConfig(String in) {
    this.config = in;
  }

  private Date expiresAt;
  /** Timestamp of when secret is going to be rotated */
  public Date getExpiresAt() {
    return this.expiresAt;
  }
  /** Timestamp of when secret is going to be rotated */
  public void setExpiresAt(Date in) {
    this.expiresAt = in;
  }

  private String id;
  /** Unique identifier of the Managed Secret. */
  public String getId() {
    return this.id;
  }
  /** Unique identifier of the Managed Secret. */
  public void setId(String in) {
    this.id = in;
  }

  private Date lastRotatedAt;
  /** Timestamp of when secret was last rotated */
  public Date getLastRotatedAt() {
    return this.lastRotatedAt;
  }
  /** Timestamp of when secret was last rotated */
  public void setLastRotatedAt(Date in) {
    this.lastRotatedAt = in;
  }

  private String name;
  /** Unique human-readable name of the Managed Secret. */
  public String getName() {
    return this.name;
  }
  /** Unique human-readable name of the Managed Secret. */
  public void setName(String in) {
    this.name = in;
  }

  private ManagedSecretPolicy policy;
  /** Password and rotation policy for the secret */
  public ManagedSecretPolicy getPolicy() {
    return this.policy;
  }
  /** Password and rotation policy for the secret */
  public void setPolicy(ManagedSecretPolicy in) {
    this.policy = in;
  }

  private String secretEngineId;
  /** An ID of a Secret Engine linked with the Managed Secret. */
  public String getSecretEngineId() {
    return this.secretEngineId;
  }
  /** An ID of a Secret Engine linked with the Managed Secret. */
  public void setSecretEngineId(String in) {
    this.secretEngineId = in;
  }

  private String secretStorePath;
  /** Path in a secret store. */
  public String getSecretStorePath() {
    return this.secretStorePath;
  }
  /** Path in a secret store. */
  public void setSecretStorePath(String in) {
    this.secretStorePath = in;
  }

  private java.util.Map<String, String> tags;
  /** Tags is a map of key, value pairs. */
  public java.util.Map<String, String> getTags() {
    java.util.Map<String, String> m = new java.util.HashMap<String, String>();
    if (this.tags != null) {
      m.putAll(this.tags);
    }
    return m;
  }
  /** Tags is a map of key, value pairs. */
  public void setTags(java.util.Map<String, String> in) {
    if (in == null) {
      this.tags = null;
      return;
    }
    this.tags = new java.util.HashMap<String, String>();
    this.tags.putAll(in);
  }

  private byte[] value;
  /** Sensitive value of the secret. */
  public byte[] getValue() {
    return this.value;
  }
  /** Sensitive value of the secret. */
  public void setValue(byte[] in) {
    this.value = in;
  }
}
