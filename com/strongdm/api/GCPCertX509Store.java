// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protogen. DO NOT EDIT.

package com.strongdm.api;

public class GCPCertX509Store implements SecretStore {
  private String caId;
  /** The ID of the target CA */
  public String getCaID() {
    return this.caId;
  }
  /** The ID of the target CA */
  public void setCaID(String in) {
    this.caId = in;
  }

  private String caPoolId;
  /** The ID of the target CA pool */
  public String getCaPoolID() {
    return this.caPoolId;
  }
  /** The ID of the target CA pool */
  public void setCaPoolID(String in) {
    this.caPoolId = in;
  }

  private String id;
  /** Unique identifier of the SecretStore. */
  public String getId() {
    return this.id;
  }
  /** Unique identifier of the SecretStore. */
  public void setId(String in) {
    this.id = in;
  }

  private int issuedCertTtlMinutes;
  /** The lifetime of certificates issued by this CA represented in minutes. */
  public int getIssuedCertTTLMinutes() {
    return this.issuedCertTtlMinutes;
  }
  /** The lifetime of certificates issued by this CA represented in minutes. */
  public void setIssuedCertTTLMinutes(int in) {
    this.issuedCertTtlMinutes = in;
  }

  private String location;
  /** The Region for the CA in GCP format e.g. us-west1 */
  public String getLocation() {
    return this.location;
  }
  /** The Region for the CA in GCP format e.g. us-west1 */
  public void setLocation(String in) {
    this.location = in;
  }

  private String name;
  /** Unique human-readable name of the SecretStore. */
  public String getName() {
    return this.name;
  }
  /** Unique human-readable name of the SecretStore. */
  public void setName(String in) {
    this.name = in;
  }

  private String projectId;
  /** The GCP project ID to target. */
  public String getProjectID() {
    return this.projectId;
  }
  /** The GCP project ID to target. */
  public void setProjectID(String in) {
    this.projectId = in;
  }

  private java.util.Map<String, String> tags;
  /** Tags is a map of key, value pairs. */
  public java.util.Map<String, String> getTags() {
    java.util.Map<String, String> m = new java.util.HashMap<String, String>();
    if (this.tags != null) {
      m.putAll(this.tags);
    }
    return m;
  }
  /** Tags is a map of key, value pairs. */
  public void setTags(java.util.Map<String, String> in) {
    if (in == null) {
      this.tags = null;
      return;
    }
    this.tags = new java.util.HashMap<String, String>();
    this.tags.putAll(in);
  }
}
