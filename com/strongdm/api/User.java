// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protogen. DO NOT EDIT.

package com.strongdm.api;

/** A User can connect to resources they are granted directly, or granted via roles. */
public class User implements Account {
  private String scim;
  /** SCIM contains the raw SCIM metadata for the user. This is a read-only field. */
  public String getSCIM() {
    return this.scim;
  }
  /** SCIM contains the raw SCIM metadata for the user. This is a read-only field. */
  public void setSCIM(String in) {
    this.scim = in;
  }

  private String email;
  /** The User's email address. Must be unique. */
  public String getEmail() {
    return this.email;
  }
  /** The User's email address. Must be unique. */
  public void setEmail(String in) {
    this.email = in;
  }

  private String externalId;
  /**
   * External ID is an alternative unique ID this user is represented by within an external service.
   */
  public String getExternalId() {
    return this.externalId;
  }
  /**
   * External ID is an alternative unique ID this user is represented by within an external service.
   */
  public void setExternalId(String in) {
    this.externalId = in;
  }

  private String firstName;
  /** The User's first name. */
  public String getFirstName() {
    return this.firstName;
  }
  /** The User's first name. */
  public void setFirstName(String in) {
    this.firstName = in;
  }

  private String id;
  /** Unique identifier of the User. */
  public String getId() {
    return this.id;
  }
  /** Unique identifier of the User. */
  public void setId(String in) {
    this.id = in;
  }

  private String lastName;
  /** The User's last name. */
  public String getLastName() {
    return this.lastName;
  }
  /** The User's last name. */
  public void setLastName(String in) {
    this.lastName = in;
  }

  private String managedBy;
  /**
   * Managed By is a read only field for what service manages this user, e.g. StrongDM, Okta, Azure.
   */
  public String getManagedBy() {
    return this.managedBy;
  }
  /**
   * Managed By is a read only field for what service manages this user, e.g. StrongDM, Okta, Azure.
   */
  public void setManagedBy(String in) {
    this.managedBy = in;
  }

  private String managerId;
  /**
   * Manager ID is the ID of the user's manager. This field is empty when the user has no manager.
   */
  public String getManagerId() {
    return this.managerId;
  }
  /**
   * Manager ID is the ID of the user's manager. This field is empty when the user has no manager.
   */
  public void setManagerId(String in) {
    this.managerId = in;
  }

  private String password;
  /**
   * Password is a write-only field that can be used to set the user's password. Currently only
   * supported for update.
   */
  public String getPassword() {
    return this.password;
  }
  /**
   * Password is a write-only field that can be used to set the user's password. Currently only
   * supported for update.
   */
  public void setPassword(String in) {
    this.password = in;
  }

  private String permissionLevel;
  /** PermissionLevel is the user's permission level e.g. admin, DBA, user. */
  public String getPermissionLevel() {
    return this.permissionLevel;
  }
  /** PermissionLevel is the user's permission level e.g. admin, DBA, user. */
  public void setPermissionLevel(String in) {
    this.permissionLevel = in;
  }

  private String resolvedManagerId;
  /**
   * Resolved Manager ID is the ID of the user's manager derived from the manager_id, if present, or
   * from the SCIM metadata. This is a read-only field that's only populated for get and list.
   */
  public String getResolvedManagerId() {
    return this.resolvedManagerId;
  }
  /**
   * Resolved Manager ID is the ID of the user's manager derived from the manager_id, if present, or
   * from the SCIM metadata. This is a read-only field that's only populated for get and list.
   */
  public void setResolvedManagerId(String in) {
    this.resolvedManagerId = in;
  }

  private boolean suspended;
  /** Suspended is a read only field for the User's suspended state. */
  public boolean getSuspended() {
    return this.suspended;
  }
  /** Suspended is a read only field for the User's suspended state. */
  public void setSuspended(boolean in) {
    this.suspended = in;
  }

  private java.util.Map<String, String> tags;
  /** Tags is a map of key, value pairs. */
  public java.util.Map<String, String> getTags() {
    java.util.Map<String, String> m = new java.util.HashMap<String, String>();
    if (this.tags != null) {
      m.putAll(this.tags);
    }
    return m;
  }
  /** Tags is a map of key, value pairs. */
  public void setTags(java.util.Map<String, String> in) {
    if (in == null) {
      this.tags = null;
      return;
    }
    this.tags = new java.util.HashMap<String, String>();
    this.tags.putAll(in);
  }
}
