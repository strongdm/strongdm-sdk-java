// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by protogen. DO NOT EDIT.

package com.strongdm.api;

import io.grpc.*;
import java.util.concurrent.Executor;

class SigningCallCredential extends CallCredentials {
  private final String apiAccessKey;
  private final String signature;
  private static final String API_VERSION = "2024-03-28";
  private static final String USER_AGENT = "strongdm-sdk-java/11.1.0";

  protected SigningCallCredential(String apiAccessKey, String signature) {
    this.apiAccessKey = apiAccessKey;
    this.signature = signature;
  }

  @Override
  public void applyRequestMetadata(
      RequestInfo requestInfo, Executor executor, MetadataApplier metadataApplier) {
    executor.execute(
        new Runnable() {
          @Override
          public void run() {
            try {
              Metadata headers = new Metadata();
              Metadata.Key<String> apiAccessMD =
                  Metadata.Key.of("x-sdm-authentication", Metadata.ASCII_STRING_MARSHALLER);
              headers.put(apiAccessMD, apiAccessKey);
              Metadata.Key<String> signatureMD =
                  Metadata.Key.of("x-sdm-signature", Metadata.ASCII_STRING_MARSHALLER);
              headers.put(signatureMD, signature);
              Metadata.Key<String> apiVersionMD =
                  Metadata.Key.of("x-sdm-api-version", Metadata.ASCII_STRING_MARSHALLER);
              headers.put(apiVersionMD, API_VERSION);
              Metadata.Key<String> userAgentMD =
                  Metadata.Key.of("x-sdm-user-agent", Metadata.ASCII_STRING_MARSHALLER);
              headers.put(userAgentMD, USER_AGENT);
              metadataApplier.apply(headers);
            } catch (Throwable e) {
              e.printStackTrace();
              metadataApplier.fail(Status.UNAUTHENTICATED.withCause(e));
            }
          }
        });
  }

  @Override
  public void thisUsesUnstableApi() {}
}
