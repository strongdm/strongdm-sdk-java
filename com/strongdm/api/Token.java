// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protogen. DO NOT EDIT.

package com.strongdm.api;

import java.time.Duration;
import java.util.Date;
import java.util.List;

/**
 * A Token is an account providing tokenized access for automation or integration use. Tokens
 * include admin tokens, API keys, and SCIM tokens.
 */
public class Token implements Account {
  private String accountType;
  /** Corresponds to the type of token, e.g. api or admin-token. */
  public String getAccountType() {
    return this.accountType;
  }
  /** Corresponds to the type of token, e.g. api or admin-token. */
  public void setAccountType(String in) {
    this.accountType = in;
  }

  private Date deadline;
  /** The timestamp when the Token will expire. */
  public Date getDeadline() {
    return this.deadline;
  }
  /** The timestamp when the Token will expire. */
  public void setDeadline(Date in) {
    this.deadline = in;
  }

  private Duration duration;
  /** Duration from token creation to expiration. */
  public Duration getDuration() {
    return this.duration;
  }
  /** Duration from token creation to expiration. */
  public void setDuration(Duration in) {
    this.duration = in;
  }

  private String id;
  /** Unique identifier of the Token. */
  public String getId() {
    return this.id;
  }
  /** Unique identifier of the Token. */
  public void setId(String in) {
    this.id = in;
  }

  private String name;
  /** Unique human-readable name of the Token. */
  public String getName() {
    return this.name;
  }
  /** Unique human-readable name of the Token. */
  public void setName(String in) {
    this.name = in;
  }

  private List<String> permissions;
  /** Permissions assigned to the token, e.g. role:create. */
  public List<String> getPermissions() {
    return this.permissions;
  }
  /** Permissions assigned to the token, e.g. role:create. */
  public void setPermissions(List<String> in) {
    this.permissions = in;
  }

  private Date rekeyed;
  /** The timestamp when the Token was last rekeyed. */
  public Date getRekeyed() {
    return this.rekeyed;
  }
  /** The timestamp when the Token was last rekeyed. */
  public void setRekeyed(Date in) {
    this.rekeyed = in;
  }

  private boolean suspended;
  /** Reserved for future use. Always false for tokens. */
  public boolean getSuspended() {
    return this.suspended;
  }
  /** Reserved for future use. Always false for tokens. */
  public void setSuspended(boolean in) {
    this.suspended = in;
  }

  private java.util.Map<String, String> tags;
  /** Tags is a map of key, value pairs. */
  public java.util.Map<String, String> getTags() {
    java.util.Map<String, String> m = new java.util.HashMap<String, String>();
    if (this.tags != null) {
      m.putAll(this.tags);
    }
    return m;
  }
  /** Tags is a map of key, value pairs. */
  public void setTags(java.util.Map<String, String> in) {
    if (in == null) {
      this.tags = null;
      return;
    }
    this.tags = new java.util.HashMap<String, String>();
    this.tags.putAll(in);
  }
}
