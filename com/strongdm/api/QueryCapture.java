// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protogen. DO NOT EDIT.

package com.strongdm.api;

/**
 * A QueryCapture contains additional information about queries against SSH, Kubernetes, and RDP
 * resources.
 */
public class QueryCapture {
  private String clientCommand;
  /** The command executed on the client for a Kubernetes session. */
  public String getClientCommand() {
    return this.clientCommand;
  }
  /** The command executed on the client for a Kubernetes session. */
  public void setClientCommand(String in) {
    this.clientCommand = in;
  }

  private String command;
  /** The command executed over an SSH or Kubernetes session. */
  public String getCommand() {
    return this.command;
  }
  /** The command executed over an SSH or Kubernetes session. */
  public void setCommand(String in) {
    this.command = in;
  }

  private String container;
  /** The target container of a Kubernetes operation. */
  public String getContainer() {
    return this.container;
  }
  /** The target container of a Kubernetes operation. */
  public void setContainer(String in) {
    this.container = in;
  }

  private java.util.Map<String, String> env;
  /** The environment variables for an SSH or Kubernetes session. */
  public java.util.Map<String, String> getEnv() {
    return this.env;
  }
  /** The environment variables for an SSH or Kubernetes session. */
  public void setEnv(java.util.Map<String, String> in) {
    this.env = in;
  }

  private String fileName;
  /** The remote file name of an SCP operation. */
  public String getFileName() {
    return this.fileName;
  }
  /** The remote file name of an SCP operation. */
  public void setFileName(String in) {
    this.fileName = in;
  }

  private long fileSize;
  /** The file size transferred for an SCP operation. */
  public long getFileSize() {
    return this.fileSize;
  }
  /** The file size transferred for an SCP operation. */
  public void setFileSize(long in) {
    this.fileSize = in;
  }

  private int height;
  /** The height of the terminal or window for SSH, Kubernetes, and RDP interactive sessions. */
  public int getHeight() {
    return this.height;
  }
  /** The height of the terminal or window for SSH, Kubernetes, and RDP interactive sessions. */
  public void setHeight(int in) {
    this.height = in;
  }

  private String pod;
  /** The target pod of a Kubernetes operation. */
  public String getPod() {
    return this.pod;
  }
  /** The target pod of a Kubernetes operation. */
  public void setPod(String in) {
    this.pod = in;
  }

  private byte[] requestBody;
  /** The HTTP request body of a Kubernetes operation. */
  public byte[] getRequestBody() {
    return this.requestBody;
  }
  /** The HTTP request body of a Kubernetes operation. */
  public void setRequestBody(byte[] in) {
    this.requestBody = in;
  }

  private String requestMethod;
  /** The HTTP request method of a Kubernetes operation. */
  public String getRequestMethod() {
    return this.requestMethod;
  }
  /** The HTTP request method of a Kubernetes operation. */
  public void setRequestMethod(String in) {
    this.requestMethod = in;
  }

  private String requestUri;
  /** The HTTP request URI of a Kubernetes operation. */
  public String getRequestUri() {
    return this.requestUri;
  }
  /** The HTTP request URI of a Kubernetes operation. */
  public void setRequestUri(String in) {
    this.requestUri = in;
  }

  private String type;
  /** The CaptureType of this query capture, one of the CaptureType constants. */
  public String getType() {
    return this.type;
  }
  /** The CaptureType of this query capture, one of the CaptureType constants. */
  public void setType(String in) {
    this.type = in;
  }

  private int width;
  /** The width of the terminal or window for SSH, Kubernetes, and RDP interactive sessions. */
  public int getWidth() {
    return this.width;
  }
  /** The width of the terminal or window for SSH, Kubernetes, and RDP interactive sessions. */
  public void setWidth(int in) {
    this.width = in;
  }
}
