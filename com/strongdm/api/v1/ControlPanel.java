// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// This file was generated by protogen. DO NOT EDIT.

package com.strongdm.api.v1;

import com.strongdm.api.v1.plumbing.ControlPanelGrpc;
import com.strongdm.api.v1.plumbing.ControlPanelPlumbing;
import com.strongdm.api.v1.plumbing.Plumbing;
import io.grpc.ManagedChannel;
import java.util.concurrent.TimeUnit;

// ControlPanel contains all administrative controls.
public class ControlPanel {
  private final ControlPanelGrpc.ControlPanelBlockingStub stub;
  private final Client parent;

  public ControlPanel(ManagedChannel channel, Client client) {

    this.stub = ControlPanelGrpc.newBlockingStub(channel);
    this.parent = client;
  }

  private ControlPanel(ControlPanelGrpc.ControlPanelBlockingStub stub, Client client) {
    this.stub = stub;
    this.parent = client;
  }

  // This function returns a copy of the ControlPanel service which has
  // the given deadline set for all method calls.
  public ControlPanel withDeadlineAfter(long duration, TimeUnit units) {
    return new ControlPanel(this.stub.withDeadlineAfter(duration, units), this.parent);
  }
  // GetSSHCAPublicKey retrieves the SSH CA public key.
  public ControlPanelGetSSHCAPublicKeyResponse getSSHCAPublicKey() throws RpcException {
    ControlPanelPlumbing.ControlPanelGetSSHCAPublicKeyRequest.Builder builder =
        ControlPanelPlumbing.ControlPanelGetSSHCAPublicKeyRequest.newBuilder();
    ControlPanelPlumbing.ControlPanelGetSSHCAPublicKeyRequest req = builder.build();
    ControlPanelPlumbing.ControlPanelGetSSHCAPublicKeyResponse plumbingResponse;
    int tries = 0;
    while (true) {
      try {
        plumbingResponse =
            this.stub
                .withCallCredentials(
                    this.parent.getCallCredentials("ControlPanel.GetSSHCAPublicKey", req))
                .getSSHCAPublicKey(req);
      } catch (Exception e) {
        if (this.parent.shouldRetry(tries, e)) {
          tries++;
          this.parent.jitterSleep(tries);
          continue;
        }
        throw Plumbing.convertExceptionToPorcelain(e);
      }
      break;
    }
    return Plumbing.convertControlPanelGetSSHCAPublicKeyResponseToPorcelain(plumbingResponse);
  }
}
