// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// This file was generated by protogen. DO NOT EDIT.

package com.strongdm.api.v1;

// A Role is a collection of access grants, and typically corresponds to a team, Active Directory
// OU, or other organizational unit. Users are granted access to resources by assigning them to
// roles.
public class Role {
  private String id;
  // Unique identifier of the Role.
  public String getId() {
    return this.id;
  }
  // Unique identifier of the Role.
  public void setId(String in) {
    this.id = in;
  }

  private String name;
  // Unique human-readable name of the Role.
  public String getName() {
    return this.name;
  }
  // Unique human-readable name of the Role.
  public void setName(String in) {
    this.name = in;
  }

  private String accessRules;
  // AccessRules JSON encoded access rules data.
  public String getAccessRules() {
    return this.accessRules;
  }
  // AccessRules JSON encoded access rules data.
  public void setAccessRules(String in) {
    this.accessRules = in;
  }

  private boolean composite;
  // True if the Role is a composite role.
  public boolean getComposite() {
    return this.composite;
  }
  // True if the Role is a composite role.
  public void setComposite(boolean in) {
    this.composite = in;
  }

  private java.util.Map<String, String> tags;
  // Tags is a map of key, value pairs.
  public java.util.Map<String, String> getTags() {
    java.util.Map<String, String> m = new java.util.HashMap<String, String>();
    if (this.tags != null) {
      m.putAll(this.tags);
    }
    return m;
  }
  // Tags is a map of key, value pairs.
  public void setTags(java.util.Map<String, String> in) {
    if (in == null) {
      this.tags = null;
      return;
    }
    this.tags = new java.util.HashMap<String, String>();
    this.tags.putAll(in);
  }
}
