// Copyright 2020 StrongDM Inc
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// This file was generated by protogen. DO NOT EDIT.

package com.strongdm.api.v1;

import io.grpc.*;

import java.util.concurrent.Executor;


public class SigningCallCredential extends CallCredentials {
  private final String apiAccessKey;
  private final String signature;

  public SigningCallCredential(String apiAccessKey, String signature) {
    this.apiAccessKey = apiAccessKey;
    this.signature = signature;
  }

  @Override public void applyRequestMetadata(RequestInfo requestInfo, Executor executor,
          MetadataApplier metadataApplier) {
  	executor.execute(new Runnable() {
      @Override public void run() {
        try {
          Metadata headers = new Metadata();
          Metadata.Key<String> apiAccessMD = Metadata.Key.of("x-sdm-authentication", Metadata.ASCII_STRING_MARSHALLER);
          headers.put(apiAccessMD, apiAccessKey);
          Metadata.Key<String> signatureMD = Metadata.Key.of("x-sdm-signature", Metadata.ASCII_STRING_MARSHALLER);
          headers.put(signatureMD, signature);
          metadataApplier.apply(headers);
        } catch (Throwable e) {
          e.printStackTrace();
          metadataApplier.fail(Status.UNAUTHENTICATED.withCause(e));
        }
      }
    });
  }

  @Override public void thisUsesUnstableApi() {
  }
}
