// Copyright 2020 StrongDM Inc
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// This file was generated by protogen. DO NOT EDIT.

package com.strongdm.api.v1;

import java.util.ArrayList;
import java.util.List;
import java.util.Collection;
import java.util.Date;


public class HTTPNoAuth
    implements Resource
    {
    private String id;
    // Unique identifier of the Resource.
    public String getId() {
        return this.id;
    }
    // Unique identifier of the Resource.
    public void setId(String in) {
        this.id = in;
    }
    private String name;
    // Unique human-readable name of the Resource.
    public String getName() {
        return this.name;
    }
    // Unique human-readable name of the Resource.
    public void setName(String in) {
        this.name = in;
    }
    private boolean healthy;
    // True if the datasource is reachable and the credentials are valid.
    public boolean getHealthy() {
        return this.healthy;
    }
    // True if the datasource is reachable and the credentials are valid.
    public void setHealthy(boolean in) {
        this.healthy = in;
    }
    private java.util.Map<String, String> tags;
    // Tags is a map of key, value pairs.
    public java.util.Map<String, String> getTags() {
        java.util.Map<String, String> m = new java.util.HashMap<String, String>();
        if (this.tags != null) {
            m.putAll(this.tags);
        }
        return m;
    }
    // Tags is a map of key, value pairs.
    public void setTags(java.util.Map<String, String> in) {
        if (in == null) {
            this.tags = null;
            return;
        }
        this.tags = new java.util.HashMap<String, String>();
        this.tags.putAll(in);
    }
    private String url;

    public String getUrl() {
        return this.url;
    }

    public void setUrl(String in) {
        this.url = in;
    }
    private String healthcheckPath;

    public String getHealthcheckPath() {
        return this.healthcheckPath;
    }

    public void setHealthcheckPath(String in) {
        this.healthcheckPath = in;
    }
    private String headersBlacklist;

    public String getHeadersBlacklist() {
        return this.headersBlacklist;
    }

    public void setHeadersBlacklist(String in) {
        this.headersBlacklist = in;
    }
    private String defaultPath;

    public String getDefaultPath() {
        return this.defaultPath;
    }

    public void setDefaultPath(String in) {
        this.defaultPath = in;
    }
    private String subdomain;

    public String getSubdomain() {
        return this.subdomain;
    }

    public void setSubdomain(String in) {
        this.subdomain = in;
    }
}
