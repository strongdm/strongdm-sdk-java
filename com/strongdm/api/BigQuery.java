// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// This file was generated by protogen. DO NOT EDIT.

package com.strongdm.api;

public class BigQuery implements Resource {
  private String bindInterface;
  /** Bind interface */
  public String getBindInterface() {
    return this.bindInterface;
  }
  /** Bind interface */
  public void setBindInterface(String in) {
    this.bindInterface = in;
  }

  private String egressFilter;
  /** A filter applied to the routing logic to pin datasource to nodes. */
  public String getEgressFilter() {
    return this.egressFilter;
  }
  /** A filter applied to the routing logic to pin datasource to nodes. */
  public void setEgressFilter(String in) {
    this.egressFilter = in;
  }

  private String endpoint;
  /** */
  public String getEndpoint() {
    return this.endpoint;
  }
  /** */
  public void setEndpoint(String in) {
    this.endpoint = in;
  }

  private boolean healthy;
  /** True if the datasource is reachable and the credentials are valid. */
  public boolean getHealthy() {
    return this.healthy;
  }
  /** True if the datasource is reachable and the credentials are valid. */
  public void setHealthy(boolean in) {
    this.healthy = in;
  }

  private String id;
  /** Unique identifier of the Resource. */
  public String getId() {
    return this.id;
  }
  /** Unique identifier of the Resource. */
  public void setId(String in) {
    this.id = in;
  }

  private String name;
  /** Unique human-readable name of the Resource. */
  public String getName() {
    return this.name;
  }
  /** Unique human-readable name of the Resource. */
  public void setName(String in) {
    this.name = in;
  }

  private int portOverride;
  /** */
  public int getPortOverride() {
    return this.portOverride;
  }
  /** */
  public void setPortOverride(int in) {
    this.portOverride = in;
  }

  private String privateKey;
  /** */
  public String getPrivateKey() {
    return this.privateKey;
  }
  /** */
  public void setPrivateKey(String in) {
    this.privateKey = in;
  }

  private String project;
  /** */
  public String getProject() {
    return this.project;
  }
  /** */
  public void setProject(String in) {
    this.project = in;
  }

  private String secretStoreId;
  /** ID of the secret store containing credentials for this resource, if any. */
  public String getSecretStoreId() {
    return this.secretStoreId;
  }
  /** ID of the secret store containing credentials for this resource, if any. */
  public void setSecretStoreId(String in) {
    this.secretStoreId = in;
  }

  private java.util.Map<String, String> tags;
  /** Tags is a map of key, value pairs. */
  public java.util.Map<String, String> getTags() {
    java.util.Map<String, String> m = new java.util.HashMap<String, String>();
    if (this.tags != null) {
      m.putAll(this.tags);
    }
    return m;
  }
  /** Tags is a map of key, value pairs. */
  public void setTags(java.util.Map<String, String> in) {
    if (in == null) {
      this.tags = null;
      return;
    }
    this.tags = new java.util.HashMap<String, String>();
    this.tags.putAll(in);
  }

  private String username;
  /** */
  public String getUsername() {
    return this.username;
  }
  /** */
  public void setUsername(String in) {
    this.username = in;
  }
}
