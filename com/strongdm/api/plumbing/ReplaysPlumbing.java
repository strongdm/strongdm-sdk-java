// Copyright 2020 StrongDM Inc
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: replays.proto

package com.strongdm.api.plumbing;

public final class ReplaysPlumbing {
  private ReplaysPlumbing() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ReplayListRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v1.ReplayListRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Paging parameters for the replay.
     * </pre>
     *
     * <code>.v1.ListRequestMetadata meta = 1;</code>
     * @return Whether the meta field is set.
     */
    boolean hasMeta();
    /**
     * <pre>
     * Paging parameters for the replay.
     * </pre>
     *
     * <code>.v1.ListRequestMetadata meta = 1;</code>
     * @return The meta.
     */
    com.strongdm.api.plumbing.Spec.ListRequestMetadata getMeta();
    /**
     * <pre>
     * Paging parameters for the replay.
     * </pre>
     *
     * <code>.v1.ListRequestMetadata meta = 1;</code>
     */
    com.strongdm.api.plumbing.Spec.ListRequestMetadataOrBuilder getMetaOrBuilder();

    /**
     * <pre>
     * A human-readable filter replay string.
     * </pre>
     *
     * <code>string filter = 2 [(.v1.field_options) = { ... }</code>
     * @return The filter.
     */
    java.lang.String getFilter();
    /**
     * <pre>
     * A human-readable filter replay string.
     * </pre>
     *
     * <code>string filter = 2 [(.v1.field_options) = { ... }</code>
     * @return The bytes for filter.
     */
    com.google.protobuf.ByteString
        getFilterBytes();
  }
  /**
   * <pre>
   * ReplayListRequest specifies criteria for retrieving a list of ReplayChunks.
   * The only criteria supportd is a single query ID.
   * </pre>
   *
   * Protobuf type {@code v1.ReplayListRequest}
   */
  public static final class ReplayListRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v1.ReplayListRequest)
      ReplayListRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReplayListRequest.newBuilder() to construct.
    private ReplayListRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReplayListRequest() {
      filter_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReplayListRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ReplayListRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.strongdm.api.plumbing.Spec.ListRequestMetadata.Builder subBuilder = null;
              if (meta_ != null) {
                subBuilder = meta_.toBuilder();
              }
              meta_ = input.readMessage(com.strongdm.api.plumbing.Spec.ListRequestMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(meta_);
                meta_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              filter_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayListRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayListRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest.class, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest.Builder.class);
    }

    public static final int META_FIELD_NUMBER = 1;
    private com.strongdm.api.plumbing.Spec.ListRequestMetadata meta_;
    /**
     * <pre>
     * Paging parameters for the replay.
     * </pre>
     *
     * <code>.v1.ListRequestMetadata meta = 1;</code>
     * @return Whether the meta field is set.
     */
    @java.lang.Override
    public boolean hasMeta() {
      return meta_ != null;
    }
    /**
     * <pre>
     * Paging parameters for the replay.
     * </pre>
     *
     * <code>.v1.ListRequestMetadata meta = 1;</code>
     * @return The meta.
     */
    @java.lang.Override
    public com.strongdm.api.plumbing.Spec.ListRequestMetadata getMeta() {
      return meta_ == null ? com.strongdm.api.plumbing.Spec.ListRequestMetadata.getDefaultInstance() : meta_;
    }
    /**
     * <pre>
     * Paging parameters for the replay.
     * </pre>
     *
     * <code>.v1.ListRequestMetadata meta = 1;</code>
     */
    @java.lang.Override
    public com.strongdm.api.plumbing.Spec.ListRequestMetadataOrBuilder getMetaOrBuilder() {
      return getMeta();
    }

    public static final int FILTER_FIELD_NUMBER = 2;
    private volatile java.lang.Object filter_;
    /**
     * <pre>
     * A human-readable filter replay string.
     * </pre>
     *
     * <code>string filter = 2 [(.v1.field_options) = { ... }</code>
     * @return The filter.
     */
    @java.lang.Override
    public java.lang.String getFilter() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filter_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A human-readable filter replay string.
     * </pre>
     *
     * <code>string filter = 2 [(.v1.field_options) = { ... }</code>
     * @return The bytes for filter.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFilterBytes() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (meta_ != null) {
        output.writeMessage(1, getMeta());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filter_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, filter_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (meta_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMeta());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filter_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, filter_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest)) {
        return super.equals(obj);
      }
      com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest other = (com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest) obj;

      if (hasMeta() != other.hasMeta()) return false;
      if (hasMeta()) {
        if (!getMeta()
            .equals(other.getMeta())) return false;
      }
      if (!getFilter()
          .equals(other.getFilter())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMeta()) {
        hash = (37 * hash) + META_FIELD_NUMBER;
        hash = (53 * hash) + getMeta().hashCode();
      }
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilter().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ReplayListRequest specifies criteria for retrieving a list of ReplayChunks.
     * The only criteria supportd is a single query ID.
     * </pre>
     *
     * Protobuf type {@code v1.ReplayListRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v1.ReplayListRequest)
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayListRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayListRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest.class, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest.Builder.class);
      }

      // Construct using com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (metaBuilder_ == null) {
          meta_ = null;
        } else {
          meta_ = null;
          metaBuilder_ = null;
        }
        filter_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayListRequest_descriptor;
      }

      @java.lang.Override
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest getDefaultInstanceForType() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest build() {
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest buildPartial() {
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest result = new com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest(this);
        if (metaBuilder_ == null) {
          result.meta_ = meta_;
        } else {
          result.meta_ = metaBuilder_.build();
        }
        result.filter_ = filter_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest) {
          return mergeFrom((com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest other) {
        if (other == com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest.getDefaultInstance()) return this;
        if (other.hasMeta()) {
          mergeMeta(other.getMeta());
        }
        if (!other.getFilter().isEmpty()) {
          filter_ = other.filter_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.strongdm.api.plumbing.Spec.ListRequestMetadata meta_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.strongdm.api.plumbing.Spec.ListRequestMetadata, com.strongdm.api.plumbing.Spec.ListRequestMetadata.Builder, com.strongdm.api.plumbing.Spec.ListRequestMetadataOrBuilder> metaBuilder_;
      /**
       * <pre>
       * Paging parameters for the replay.
       * </pre>
       *
       * <code>.v1.ListRequestMetadata meta = 1;</code>
       * @return Whether the meta field is set.
       */
      public boolean hasMeta() {
        return metaBuilder_ != null || meta_ != null;
      }
      /**
       * <pre>
       * Paging parameters for the replay.
       * </pre>
       *
       * <code>.v1.ListRequestMetadata meta = 1;</code>
       * @return The meta.
       */
      public com.strongdm.api.plumbing.Spec.ListRequestMetadata getMeta() {
        if (metaBuilder_ == null) {
          return meta_ == null ? com.strongdm.api.plumbing.Spec.ListRequestMetadata.getDefaultInstance() : meta_;
        } else {
          return metaBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Paging parameters for the replay.
       * </pre>
       *
       * <code>.v1.ListRequestMetadata meta = 1;</code>
       */
      public Builder setMeta(com.strongdm.api.plumbing.Spec.ListRequestMetadata value) {
        if (metaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          meta_ = value;
          onChanged();
        } else {
          metaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Paging parameters for the replay.
       * </pre>
       *
       * <code>.v1.ListRequestMetadata meta = 1;</code>
       */
      public Builder setMeta(
          com.strongdm.api.plumbing.Spec.ListRequestMetadata.Builder builderForValue) {
        if (metaBuilder_ == null) {
          meta_ = builderForValue.build();
          onChanged();
        } else {
          metaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Paging parameters for the replay.
       * </pre>
       *
       * <code>.v1.ListRequestMetadata meta = 1;</code>
       */
      public Builder mergeMeta(com.strongdm.api.plumbing.Spec.ListRequestMetadata value) {
        if (metaBuilder_ == null) {
          if (meta_ != null) {
            meta_ =
              com.strongdm.api.plumbing.Spec.ListRequestMetadata.newBuilder(meta_).mergeFrom(value).buildPartial();
          } else {
            meta_ = value;
          }
          onChanged();
        } else {
          metaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Paging parameters for the replay.
       * </pre>
       *
       * <code>.v1.ListRequestMetadata meta = 1;</code>
       */
      public Builder clearMeta() {
        if (metaBuilder_ == null) {
          meta_ = null;
          onChanged();
        } else {
          meta_ = null;
          metaBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Paging parameters for the replay.
       * </pre>
       *
       * <code>.v1.ListRequestMetadata meta = 1;</code>
       */
      public com.strongdm.api.plumbing.Spec.ListRequestMetadata.Builder getMetaBuilder() {
        
        onChanged();
        return getMetaFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Paging parameters for the replay.
       * </pre>
       *
       * <code>.v1.ListRequestMetadata meta = 1;</code>
       */
      public com.strongdm.api.plumbing.Spec.ListRequestMetadataOrBuilder getMetaOrBuilder() {
        if (metaBuilder_ != null) {
          return metaBuilder_.getMessageOrBuilder();
        } else {
          return meta_ == null ?
              com.strongdm.api.plumbing.Spec.ListRequestMetadata.getDefaultInstance() : meta_;
        }
      }
      /**
       * <pre>
       * Paging parameters for the replay.
       * </pre>
       *
       * <code>.v1.ListRequestMetadata meta = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.strongdm.api.plumbing.Spec.ListRequestMetadata, com.strongdm.api.plumbing.Spec.ListRequestMetadata.Builder, com.strongdm.api.plumbing.Spec.ListRequestMetadataOrBuilder> 
          getMetaFieldBuilder() {
        if (metaBuilder_ == null) {
          metaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.strongdm.api.plumbing.Spec.ListRequestMetadata, com.strongdm.api.plumbing.Spec.ListRequestMetadata.Builder, com.strongdm.api.plumbing.Spec.ListRequestMetadataOrBuilder>(
                  getMeta(),
                  getParentForChildren(),
                  isClean());
          meta_ = null;
        }
        return metaBuilder_;
      }

      private java.lang.Object filter_ = "";
      /**
       * <pre>
       * A human-readable filter replay string.
       * </pre>
       *
       * <code>string filter = 2 [(.v1.field_options) = { ... }</code>
       * @return The filter.
       */
      public java.lang.String getFilter() {
        java.lang.Object ref = filter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A human-readable filter replay string.
       * </pre>
       *
       * <code>string filter = 2 [(.v1.field_options) = { ... }</code>
       * @return The bytes for filter.
       */
      public com.google.protobuf.ByteString
          getFilterBytes() {
        java.lang.Object ref = filter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A human-readable filter replay string.
       * </pre>
       *
       * <code>string filter = 2 [(.v1.field_options) = { ... }</code>
       * @param value The filter to set.
       * @return This builder for chaining.
       */
      public Builder setFilter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable filter replay string.
       * </pre>
       *
       * <code>string filter = 2 [(.v1.field_options) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearFilter() {
        
        filter_ = getDefaultInstance().getFilter();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable filter replay string.
       * </pre>
       *
       * <code>string filter = 2 [(.v1.field_options) = { ... }</code>
       * @param value The bytes for filter to set.
       * @return This builder for chaining.
       */
      public Builder setFilterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filter_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:v1.ReplayListRequest)
    }

    // @@protoc_insertion_point(class_scope:v1.ReplayListRequest)
    private static final com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest();
    }

    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReplayListRequest>
        PARSER = new com.google.protobuf.AbstractParser<ReplayListRequest>() {
      @java.lang.Override
      public ReplayListRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReplayListRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReplayListRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReplayListRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReplayListResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v1.ReplayListResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Paging information for the replay.
     * </pre>
     *
     * <code>.v1.ListResponseMetadata meta = 1;</code>
     * @return Whether the meta field is set.
     */
    boolean hasMeta();
    /**
     * <pre>
     * Paging information for the replay.
     * </pre>
     *
     * <code>.v1.ListResponseMetadata meta = 1;</code>
     * @return The meta.
     */
    com.strongdm.api.plumbing.Spec.ListResponseMetadata getMeta();
    /**
     * <pre>
     * Paging information for the replay.
     * </pre>
     *
     * <code>.v1.ListResponseMetadata meta = 1;</code>
     */
    com.strongdm.api.plumbing.Spec.ListResponseMetadataOrBuilder getMetaOrBuilder();

    /**
     * <pre>
     * A single page of results matching the list request criteria.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
     */
    java.util.List<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk> 
        getChunksList();
    /**
     * <pre>
     * A single page of results matching the list request criteria.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
     */
    com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk getChunks(int index);
    /**
     * <pre>
     * A single page of results matching the list request criteria.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
     */
    int getChunksCount();
    /**
     * <pre>
     * A single page of results matching the list request criteria.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
     */
    java.util.List<? extends com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkOrBuilder> 
        getChunksOrBuilderList();
    /**
     * <pre>
     * A single page of results matching the list request criteria.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
     */
    com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkOrBuilder getChunksOrBuilder(
        int index);

    /**
     * <pre>
     * Rate limit information.
     * </pre>
     *
     * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
     * @return Whether the rateLimit field is set.
     */
    boolean hasRateLimit();
    /**
     * <pre>
     * Rate limit information.
     * </pre>
     *
     * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
     * @return The rateLimit.
     */
    com.strongdm.api.plumbing.Spec.RateLimitMetadata getRateLimit();
    /**
     * <pre>
     * Rate limit information.
     * </pre>
     *
     * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
     */
    com.strongdm.api.plumbing.Spec.RateLimitMetadataOrBuilder getRateLimitOrBuilder();
  }
  /**
   * <pre>
   * ReplayListResponse returns a list of ReplayChunks that meet the criteria of a
   * ReplayListRequest.
   * </pre>
   *
   * Protobuf type {@code v1.ReplayListResponse}
   */
  public static final class ReplayListResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v1.ReplayListResponse)
      ReplayListResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReplayListResponse.newBuilder() to construct.
    private ReplayListResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReplayListResponse() {
      chunks_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReplayListResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ReplayListResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.strongdm.api.plumbing.Spec.ListResponseMetadata.Builder subBuilder = null;
              if (meta_ != null) {
                subBuilder = meta_.toBuilder();
              }
              meta_ = input.readMessage(com.strongdm.api.plumbing.Spec.ListResponseMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(meta_);
                meta_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                chunks_ = new java.util.ArrayList<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk>();
                mutable_bitField0_ |= 0x00000001;
              }
              chunks_.add(
                  input.readMessage(com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.parser(), extensionRegistry));
              break;
            }
            case 26: {
              com.strongdm.api.plumbing.Spec.RateLimitMetadata.Builder subBuilder = null;
              if (rateLimit_ != null) {
                subBuilder = rateLimit_.toBuilder();
              }
              rateLimit_ = input.readMessage(com.strongdm.api.plumbing.Spec.RateLimitMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rateLimit_);
                rateLimit_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          chunks_ = java.util.Collections.unmodifiableList(chunks_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayListResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayListResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse.class, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse.Builder.class);
    }

    public static final int META_FIELD_NUMBER = 1;
    private com.strongdm.api.plumbing.Spec.ListResponseMetadata meta_;
    /**
     * <pre>
     * Paging information for the replay.
     * </pre>
     *
     * <code>.v1.ListResponseMetadata meta = 1;</code>
     * @return Whether the meta field is set.
     */
    @java.lang.Override
    public boolean hasMeta() {
      return meta_ != null;
    }
    /**
     * <pre>
     * Paging information for the replay.
     * </pre>
     *
     * <code>.v1.ListResponseMetadata meta = 1;</code>
     * @return The meta.
     */
    @java.lang.Override
    public com.strongdm.api.plumbing.Spec.ListResponseMetadata getMeta() {
      return meta_ == null ? com.strongdm.api.plumbing.Spec.ListResponseMetadata.getDefaultInstance() : meta_;
    }
    /**
     * <pre>
     * Paging information for the replay.
     * </pre>
     *
     * <code>.v1.ListResponseMetadata meta = 1;</code>
     */
    @java.lang.Override
    public com.strongdm.api.plumbing.Spec.ListResponseMetadataOrBuilder getMetaOrBuilder() {
      return getMeta();
    }

    public static final int CHUNKS_FIELD_NUMBER = 2;
    private java.util.List<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk> chunks_;
    /**
     * <pre>
     * A single page of results matching the list request criteria.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk> getChunksList() {
      return chunks_;
    }
    /**
     * <pre>
     * A single page of results matching the list request criteria.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkOrBuilder> 
        getChunksOrBuilderList() {
      return chunks_;
    }
    /**
     * <pre>
     * A single page of results matching the list request criteria.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
     */
    @java.lang.Override
    public int getChunksCount() {
      return chunks_.size();
    }
    /**
     * <pre>
     * A single page of results matching the list request criteria.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
     */
    @java.lang.Override
    public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk getChunks(int index) {
      return chunks_.get(index);
    }
    /**
     * <pre>
     * A single page of results matching the list request criteria.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
     */
    @java.lang.Override
    public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkOrBuilder getChunksOrBuilder(
        int index) {
      return chunks_.get(index);
    }

    public static final int RATE_LIMIT_FIELD_NUMBER = 3;
    private com.strongdm.api.plumbing.Spec.RateLimitMetadata rateLimit_;
    /**
     * <pre>
     * Rate limit information.
     * </pre>
     *
     * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
     * @return Whether the rateLimit field is set.
     */
    @java.lang.Override
    public boolean hasRateLimit() {
      return rateLimit_ != null;
    }
    /**
     * <pre>
     * Rate limit information.
     * </pre>
     *
     * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
     * @return The rateLimit.
     */
    @java.lang.Override
    public com.strongdm.api.plumbing.Spec.RateLimitMetadata getRateLimit() {
      return rateLimit_ == null ? com.strongdm.api.plumbing.Spec.RateLimitMetadata.getDefaultInstance() : rateLimit_;
    }
    /**
     * <pre>
     * Rate limit information.
     * </pre>
     *
     * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
     */
    @java.lang.Override
    public com.strongdm.api.plumbing.Spec.RateLimitMetadataOrBuilder getRateLimitOrBuilder() {
      return getRateLimit();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (meta_ != null) {
        output.writeMessage(1, getMeta());
      }
      for (int i = 0; i < chunks_.size(); i++) {
        output.writeMessage(2, chunks_.get(i));
      }
      if (rateLimit_ != null) {
        output.writeMessage(3, getRateLimit());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (meta_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMeta());
      }
      for (int i = 0; i < chunks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, chunks_.get(i));
      }
      if (rateLimit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRateLimit());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse)) {
        return super.equals(obj);
      }
      com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse other = (com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse) obj;

      if (hasMeta() != other.hasMeta()) return false;
      if (hasMeta()) {
        if (!getMeta()
            .equals(other.getMeta())) return false;
      }
      if (!getChunksList()
          .equals(other.getChunksList())) return false;
      if (hasRateLimit() != other.hasRateLimit()) return false;
      if (hasRateLimit()) {
        if (!getRateLimit()
            .equals(other.getRateLimit())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMeta()) {
        hash = (37 * hash) + META_FIELD_NUMBER;
        hash = (53 * hash) + getMeta().hashCode();
      }
      if (getChunksCount() > 0) {
        hash = (37 * hash) + CHUNKS_FIELD_NUMBER;
        hash = (53 * hash) + getChunksList().hashCode();
      }
      if (hasRateLimit()) {
        hash = (37 * hash) + RATE_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getRateLimit().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ReplayListResponse returns a list of ReplayChunks that meet the criteria of a
     * ReplayListRequest.
     * </pre>
     *
     * Protobuf type {@code v1.ReplayListResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v1.ReplayListResponse)
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayListResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayListResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse.class, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse.Builder.class);
      }

      // Construct using com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChunksFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (metaBuilder_ == null) {
          meta_ = null;
        } else {
          meta_ = null;
          metaBuilder_ = null;
        }
        if (chunksBuilder_ == null) {
          chunks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          chunksBuilder_.clear();
        }
        if (rateLimitBuilder_ == null) {
          rateLimit_ = null;
        } else {
          rateLimit_ = null;
          rateLimitBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayListResponse_descriptor;
      }

      @java.lang.Override
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse getDefaultInstanceForType() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse build() {
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse buildPartial() {
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse result = new com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse(this);
        int from_bitField0_ = bitField0_;
        if (metaBuilder_ == null) {
          result.meta_ = meta_;
        } else {
          result.meta_ = metaBuilder_.build();
        }
        if (chunksBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            chunks_ = java.util.Collections.unmodifiableList(chunks_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.chunks_ = chunks_;
        } else {
          result.chunks_ = chunksBuilder_.build();
        }
        if (rateLimitBuilder_ == null) {
          result.rateLimit_ = rateLimit_;
        } else {
          result.rateLimit_ = rateLimitBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse) {
          return mergeFrom((com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse other) {
        if (other == com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse.getDefaultInstance()) return this;
        if (other.hasMeta()) {
          mergeMeta(other.getMeta());
        }
        if (chunksBuilder_ == null) {
          if (!other.chunks_.isEmpty()) {
            if (chunks_.isEmpty()) {
              chunks_ = other.chunks_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureChunksIsMutable();
              chunks_.addAll(other.chunks_);
            }
            onChanged();
          }
        } else {
          if (!other.chunks_.isEmpty()) {
            if (chunksBuilder_.isEmpty()) {
              chunksBuilder_.dispose();
              chunksBuilder_ = null;
              chunks_ = other.chunks_;
              bitField0_ = (bitField0_ & ~0x00000001);
              chunksBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChunksFieldBuilder() : null;
            } else {
              chunksBuilder_.addAllMessages(other.chunks_);
            }
          }
        }
        if (other.hasRateLimit()) {
          mergeRateLimit(other.getRateLimit());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.strongdm.api.plumbing.Spec.ListResponseMetadata meta_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.strongdm.api.plumbing.Spec.ListResponseMetadata, com.strongdm.api.plumbing.Spec.ListResponseMetadata.Builder, com.strongdm.api.plumbing.Spec.ListResponseMetadataOrBuilder> metaBuilder_;
      /**
       * <pre>
       * Paging information for the replay.
       * </pre>
       *
       * <code>.v1.ListResponseMetadata meta = 1;</code>
       * @return Whether the meta field is set.
       */
      public boolean hasMeta() {
        return metaBuilder_ != null || meta_ != null;
      }
      /**
       * <pre>
       * Paging information for the replay.
       * </pre>
       *
       * <code>.v1.ListResponseMetadata meta = 1;</code>
       * @return The meta.
       */
      public com.strongdm.api.plumbing.Spec.ListResponseMetadata getMeta() {
        if (metaBuilder_ == null) {
          return meta_ == null ? com.strongdm.api.plumbing.Spec.ListResponseMetadata.getDefaultInstance() : meta_;
        } else {
          return metaBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Paging information for the replay.
       * </pre>
       *
       * <code>.v1.ListResponseMetadata meta = 1;</code>
       */
      public Builder setMeta(com.strongdm.api.plumbing.Spec.ListResponseMetadata value) {
        if (metaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          meta_ = value;
          onChanged();
        } else {
          metaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Paging information for the replay.
       * </pre>
       *
       * <code>.v1.ListResponseMetadata meta = 1;</code>
       */
      public Builder setMeta(
          com.strongdm.api.plumbing.Spec.ListResponseMetadata.Builder builderForValue) {
        if (metaBuilder_ == null) {
          meta_ = builderForValue.build();
          onChanged();
        } else {
          metaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Paging information for the replay.
       * </pre>
       *
       * <code>.v1.ListResponseMetadata meta = 1;</code>
       */
      public Builder mergeMeta(com.strongdm.api.plumbing.Spec.ListResponseMetadata value) {
        if (metaBuilder_ == null) {
          if (meta_ != null) {
            meta_ =
              com.strongdm.api.plumbing.Spec.ListResponseMetadata.newBuilder(meta_).mergeFrom(value).buildPartial();
          } else {
            meta_ = value;
          }
          onChanged();
        } else {
          metaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Paging information for the replay.
       * </pre>
       *
       * <code>.v1.ListResponseMetadata meta = 1;</code>
       */
      public Builder clearMeta() {
        if (metaBuilder_ == null) {
          meta_ = null;
          onChanged();
        } else {
          meta_ = null;
          metaBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Paging information for the replay.
       * </pre>
       *
       * <code>.v1.ListResponseMetadata meta = 1;</code>
       */
      public com.strongdm.api.plumbing.Spec.ListResponseMetadata.Builder getMetaBuilder() {
        
        onChanged();
        return getMetaFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Paging information for the replay.
       * </pre>
       *
       * <code>.v1.ListResponseMetadata meta = 1;</code>
       */
      public com.strongdm.api.plumbing.Spec.ListResponseMetadataOrBuilder getMetaOrBuilder() {
        if (metaBuilder_ != null) {
          return metaBuilder_.getMessageOrBuilder();
        } else {
          return meta_ == null ?
              com.strongdm.api.plumbing.Spec.ListResponseMetadata.getDefaultInstance() : meta_;
        }
      }
      /**
       * <pre>
       * Paging information for the replay.
       * </pre>
       *
       * <code>.v1.ListResponseMetadata meta = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.strongdm.api.plumbing.Spec.ListResponseMetadata, com.strongdm.api.plumbing.Spec.ListResponseMetadata.Builder, com.strongdm.api.plumbing.Spec.ListResponseMetadataOrBuilder> 
          getMetaFieldBuilder() {
        if (metaBuilder_ == null) {
          metaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.strongdm.api.plumbing.Spec.ListResponseMetadata, com.strongdm.api.plumbing.Spec.ListResponseMetadata.Builder, com.strongdm.api.plumbing.Spec.ListResponseMetadataOrBuilder>(
                  getMeta(),
                  getParentForChildren(),
                  isClean());
          meta_ = null;
        }
        return metaBuilder_;
      }

      private java.util.List<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk> chunks_ =
        java.util.Collections.emptyList();
      private void ensureChunksIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          chunks_ = new java.util.ArrayList<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk>(chunks_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.Builder, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkOrBuilder> chunksBuilder_;

      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public java.util.List<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk> getChunksList() {
        if (chunksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(chunks_);
        } else {
          return chunksBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public int getChunksCount() {
        if (chunksBuilder_ == null) {
          return chunks_.size();
        } else {
          return chunksBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk getChunks(int index) {
        if (chunksBuilder_ == null) {
          return chunks_.get(index);
        } else {
          return chunksBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder setChunks(
          int index, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk value) {
        if (chunksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChunksIsMutable();
          chunks_.set(index, value);
          onChanged();
        } else {
          chunksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder setChunks(
          int index, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.Builder builderForValue) {
        if (chunksBuilder_ == null) {
          ensureChunksIsMutable();
          chunks_.set(index, builderForValue.build());
          onChanged();
        } else {
          chunksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder addChunks(com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk value) {
        if (chunksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChunksIsMutable();
          chunks_.add(value);
          onChanged();
        } else {
          chunksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder addChunks(
          int index, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk value) {
        if (chunksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChunksIsMutable();
          chunks_.add(index, value);
          onChanged();
        } else {
          chunksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder addChunks(
          com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.Builder builderForValue) {
        if (chunksBuilder_ == null) {
          ensureChunksIsMutable();
          chunks_.add(builderForValue.build());
          onChanged();
        } else {
          chunksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder addChunks(
          int index, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.Builder builderForValue) {
        if (chunksBuilder_ == null) {
          ensureChunksIsMutable();
          chunks_.add(index, builderForValue.build());
          onChanged();
        } else {
          chunksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder addAllChunks(
          java.lang.Iterable<? extends com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk> values) {
        if (chunksBuilder_ == null) {
          ensureChunksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, chunks_);
          onChanged();
        } else {
          chunksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder clearChunks() {
        if (chunksBuilder_ == null) {
          chunks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          chunksBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder removeChunks(int index) {
        if (chunksBuilder_ == null) {
          ensureChunksIsMutable();
          chunks_.remove(index);
          onChanged();
        } else {
          chunksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.Builder getChunksBuilder(
          int index) {
        return getChunksFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkOrBuilder getChunksOrBuilder(
          int index) {
        if (chunksBuilder_ == null) {
          return chunks_.get(index);  } else {
          return chunksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public java.util.List<? extends com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkOrBuilder> 
           getChunksOrBuilderList() {
        if (chunksBuilder_ != null) {
          return chunksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(chunks_);
        }
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.Builder addChunksBuilder() {
        return getChunksFieldBuilder().addBuilder(
            com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.getDefaultInstance());
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.Builder addChunksBuilder(
          int index) {
        return getChunksFieldBuilder().addBuilder(
            index, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.getDefaultInstance());
      }
      /**
       * <pre>
       * A single page of results matching the list request criteria.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunk chunks = 2 [(.v1.field_options) = { ... }</code>
       */
      public java.util.List<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.Builder> 
           getChunksBuilderList() {
        return getChunksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.Builder, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkOrBuilder> 
          getChunksFieldBuilder() {
        if (chunksBuilder_ == null) {
          chunksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.Builder, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkOrBuilder>(
                  chunks_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          chunks_ = null;
        }
        return chunksBuilder_;
      }

      private com.strongdm.api.plumbing.Spec.RateLimitMetadata rateLimit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.strongdm.api.plumbing.Spec.RateLimitMetadata, com.strongdm.api.plumbing.Spec.RateLimitMetadata.Builder, com.strongdm.api.plumbing.Spec.RateLimitMetadataOrBuilder> rateLimitBuilder_;
      /**
       * <pre>
       * Rate limit information.
       * </pre>
       *
       * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
       * @return Whether the rateLimit field is set.
       */
      public boolean hasRateLimit() {
        return rateLimitBuilder_ != null || rateLimit_ != null;
      }
      /**
       * <pre>
       * Rate limit information.
       * </pre>
       *
       * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
       * @return The rateLimit.
       */
      public com.strongdm.api.plumbing.Spec.RateLimitMetadata getRateLimit() {
        if (rateLimitBuilder_ == null) {
          return rateLimit_ == null ? com.strongdm.api.plumbing.Spec.RateLimitMetadata.getDefaultInstance() : rateLimit_;
        } else {
          return rateLimitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Rate limit information.
       * </pre>
       *
       * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
       */
      public Builder setRateLimit(com.strongdm.api.plumbing.Spec.RateLimitMetadata value) {
        if (rateLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rateLimit_ = value;
          onChanged();
        } else {
          rateLimitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Rate limit information.
       * </pre>
       *
       * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
       */
      public Builder setRateLimit(
          com.strongdm.api.plumbing.Spec.RateLimitMetadata.Builder builderForValue) {
        if (rateLimitBuilder_ == null) {
          rateLimit_ = builderForValue.build();
          onChanged();
        } else {
          rateLimitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Rate limit information.
       * </pre>
       *
       * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
       */
      public Builder mergeRateLimit(com.strongdm.api.plumbing.Spec.RateLimitMetadata value) {
        if (rateLimitBuilder_ == null) {
          if (rateLimit_ != null) {
            rateLimit_ =
              com.strongdm.api.plumbing.Spec.RateLimitMetadata.newBuilder(rateLimit_).mergeFrom(value).buildPartial();
          } else {
            rateLimit_ = value;
          }
          onChanged();
        } else {
          rateLimitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Rate limit information.
       * </pre>
       *
       * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
       */
      public Builder clearRateLimit() {
        if (rateLimitBuilder_ == null) {
          rateLimit_ = null;
          onChanged();
        } else {
          rateLimit_ = null;
          rateLimitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Rate limit information.
       * </pre>
       *
       * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
       */
      public com.strongdm.api.plumbing.Spec.RateLimitMetadata.Builder getRateLimitBuilder() {
        
        onChanged();
        return getRateLimitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Rate limit information.
       * </pre>
       *
       * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
       */
      public com.strongdm.api.plumbing.Spec.RateLimitMetadataOrBuilder getRateLimitOrBuilder() {
        if (rateLimitBuilder_ != null) {
          return rateLimitBuilder_.getMessageOrBuilder();
        } else {
          return rateLimit_ == null ?
              com.strongdm.api.plumbing.Spec.RateLimitMetadata.getDefaultInstance() : rateLimit_;
        }
      }
      /**
       * <pre>
       * Rate limit information.
       * </pre>
       *
       * <code>.v1.RateLimitMetadata rate_limit = 3 [(.v1.field_options) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.strongdm.api.plumbing.Spec.RateLimitMetadata, com.strongdm.api.plumbing.Spec.RateLimitMetadata.Builder, com.strongdm.api.plumbing.Spec.RateLimitMetadataOrBuilder> 
          getRateLimitFieldBuilder() {
        if (rateLimitBuilder_ == null) {
          rateLimitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.strongdm.api.plumbing.Spec.RateLimitMetadata, com.strongdm.api.plumbing.Spec.RateLimitMetadata.Builder, com.strongdm.api.plumbing.Spec.RateLimitMetadataOrBuilder>(
                  getRateLimit(),
                  getParentForChildren(),
                  isClean());
          rateLimit_ = null;
        }
        return rateLimitBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:v1.ReplayListResponse)
    }

    // @@protoc_insertion_point(class_scope:v1.ReplayListResponse)
    private static final com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse();
    }

    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReplayListResponse>
        PARSER = new com.google.protobuf.AbstractParser<ReplayListResponse>() {
      @java.lang.Override
      public ReplayListResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReplayListResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReplayListResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReplayListResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayListResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReplayChunkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v1.ReplayChunk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The raw data of the ReplayChunk. The data is encrypted if the associated Query is encrypted.
     * </pre>
     *
     * <code>bytes data = 1 [(.v1.field_options) = { ... }</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <pre>
     * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
     * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
     */
    java.util.List<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent> 
        getEventsList();
    /**
     * <pre>
     * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
     * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
     */
    com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent getEvents(int index);
    /**
     * <pre>
     * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
     * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
     */
    int getEventsCount();
    /**
     * <pre>
     * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
     * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
     */
    java.util.List<? extends com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEventOrBuilder> 
        getEventsOrBuilderList();
    /**
     * <pre>
     * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
     * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
     */
    com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEventOrBuilder getEventsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A ReplayChunk represents a single "chunk" of data from the query replay.
   * </pre>
   *
   * Protobuf type {@code v1.ReplayChunk}
   */
  public static final class ReplayChunk extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v1.ReplayChunk)
      ReplayChunkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReplayChunk.newBuilder() to construct.
    private ReplayChunk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReplayChunk() {
      data_ = com.google.protobuf.ByteString.EMPTY;
      events_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReplayChunk();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ReplayChunk(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              data_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                events_ = new java.util.ArrayList<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent>();
                mutable_bitField0_ |= 0x00000001;
              }
              events_.add(
                  input.readMessage(com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          events_ = java.util.Collections.unmodifiableList(events_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayChunk_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayChunk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.class, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * The raw data of the ReplayChunk. The data is encrypted if the associated Query is encrypted.
     * </pre>
     *
     * <code>bytes data = 1 [(.v1.field_options) = { ... }</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int EVENTS_FIELD_NUMBER = 2;
    private java.util.List<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent> events_;
    /**
     * <pre>
     * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
     * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent> getEventsList() {
      return events_;
    }
    /**
     * <pre>
     * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
     * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEventOrBuilder> 
        getEventsOrBuilderList() {
      return events_;
    }
    /**
     * <pre>
     * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
     * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
     */
    @java.lang.Override
    public int getEventsCount() {
      return events_.size();
    }
    /**
     * <pre>
     * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
     * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
     */
    @java.lang.Override
    public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent getEvents(int index) {
      return events_.get(index);
    }
    /**
     * <pre>
     * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
     * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
     * </pre>
     *
     * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
     */
    @java.lang.Override
    public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEventOrBuilder getEventsOrBuilder(
        int index) {
      return events_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!data_.isEmpty()) {
        output.writeBytes(1, data_);
      }
      for (int i = 0; i < events_.size(); i++) {
        output.writeMessage(2, events_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      for (int i = 0; i < events_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, events_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk)) {
        return super.equals(obj);
      }
      com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk other = (com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk) obj;

      if (!getData()
          .equals(other.getData())) return false;
      if (!getEventsList()
          .equals(other.getEventsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      if (getEventsCount() > 0) {
        hash = (37 * hash) + EVENTS_FIELD_NUMBER;
        hash = (53 * hash) + getEventsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A ReplayChunk represents a single "chunk" of data from the query replay.
     * </pre>
     *
     * Protobuf type {@code v1.ReplayChunk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v1.ReplayChunk)
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayChunk_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayChunk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.class, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.Builder.class);
      }

      // Construct using com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEventsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;

        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          eventsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayChunk_descriptor;
      }

      @java.lang.Override
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk getDefaultInstanceForType() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk build() {
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk buildPartial() {
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk result = new com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk(this);
        int from_bitField0_ = bitField0_;
        result.data_ = data_;
        if (eventsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            events_ = java.util.Collections.unmodifiableList(events_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.events_ = events_;
        } else {
          result.events_ = eventsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk) {
          return mergeFrom((com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk other) {
        if (other == com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk.getDefaultInstance()) return this;
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (eventsBuilder_ == null) {
          if (!other.events_.isEmpty()) {
            if (events_.isEmpty()) {
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEventsIsMutable();
              events_.addAll(other.events_);
            }
            onChanged();
          }
        } else {
          if (!other.events_.isEmpty()) {
            if (eventsBuilder_.isEmpty()) {
              eventsBuilder_.dispose();
              eventsBuilder_ = null;
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000001);
              eventsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEventsFieldBuilder() : null;
            } else {
              eventsBuilder_.addAllMessages(other.events_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The raw data of the ReplayChunk. The data is encrypted if the associated Query is encrypted.
       * </pre>
       *
       * <code>bytes data = 1 [(.v1.field_options) = { ... }</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * The raw data of the ReplayChunk. The data is encrypted if the associated Query is encrypted.
       * </pre>
       *
       * <code>bytes data = 1 [(.v1.field_options) = { ... }</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The raw data of the ReplayChunk. The data is encrypted if the associated Query is encrypted.
       * </pre>
       *
       * <code>bytes data = 1 [(.v1.field_options) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private java.util.List<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent> events_ =
        java.util.Collections.emptyList();
      private void ensureEventsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          events_ = new java.util.ArrayList<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent>(events_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.Builder, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEventOrBuilder> eventsBuilder_;

      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public java.util.List<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent> getEventsList() {
        if (eventsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(events_);
        } else {
          return eventsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public int getEventsCount() {
        if (eventsBuilder_ == null) {
          return events_.size();
        } else {
          return eventsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent getEvents(int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);
        } else {
          return eventsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder setEvents(
          int index, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.set(index, value);
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder setEvents(
          int index, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.set(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder addEvents(com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder addEvents(
          int index, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(index, value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder addEvents(
          com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder addEvents(
          int index, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder addAllEvents(
          java.lang.Iterable<? extends com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent> values) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, events_);
          onChanged();
        } else {
          eventsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder clearEvents() {
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          eventsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder removeEvents(int index) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.remove(index);
          onChanged();
        } else {
          eventsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.Builder getEventsBuilder(
          int index) {
        return getEventsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEventOrBuilder getEventsOrBuilder(
          int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);  } else {
          return eventsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public java.util.List<? extends com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEventOrBuilder> 
           getEventsOrBuilderList() {
        if (eventsBuilder_ != null) {
          return eventsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(events_);
        }
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.Builder addEventsBuilder() {
        return getEventsFieldBuilder().addBuilder(
            com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.getDefaultInstance());
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.Builder addEventsBuilder(
          int index) {
        return getEventsFieldBuilder().addBuilder(
            index, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.getDefaultInstance());
      }
      /**
       * <pre>
       * The list of events of the ReplayChunk. If the Query is encrypted, this field is always empty
       * and the events can be obtained by decrypting the data using the QueryKey returned with the Query.
       * </pre>
       *
       * <code>repeated .v1.ReplayChunkEvent events = 2 [(.v1.field_options) = { ... }</code>
       */
      public java.util.List<com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.Builder> 
           getEventsBuilderList() {
        return getEventsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.Builder, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEventOrBuilder> 
          getEventsFieldBuilder() {
        if (eventsBuilder_ == null) {
          eventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.Builder, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEventOrBuilder>(
                  events_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          events_ = null;
        }
        return eventsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:v1.ReplayChunk)
    }

    // @@protoc_insertion_point(class_scope:v1.ReplayChunk)
    private static final com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk();
    }

    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReplayChunk>
        PARSER = new com.google.protobuf.AbstractParser<ReplayChunk>() {
      @java.lang.Override
      public ReplayChunk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReplayChunk(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReplayChunk> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReplayChunk> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunk getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReplayChunkEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v1.ReplayChunkEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The raw data of the ReplayChunkEvent.
     * </pre>
     *
     * <code>bytes data = 1 [(.v1.field_options) = { ... }</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <pre>
     * The time duration over which the data in this ReplayChunkEvent was transferred.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
     * @return Whether the duration field is set.
     */
    boolean hasDuration();
    /**
     * <pre>
     * The time duration over which the data in this ReplayChunkEvent was transferred.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
     * @return The duration.
     */
    com.google.protobuf.Duration getDuration();
    /**
     * <pre>
     * The time duration over which the data in this ReplayChunkEvent was transferred.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
     */
    com.google.protobuf.DurationOrBuilder getDurationOrBuilder();
  }
  /**
   * <pre>
   * A ReplayChunkEvent represents a single event within a query replay.
   * The timing information included in each ReplayChunkEvent may be used to replay a session in real time.
   * </pre>
   *
   * Protobuf type {@code v1.ReplayChunkEvent}
   */
  public static final class ReplayChunkEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v1.ReplayChunkEvent)
      ReplayChunkEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReplayChunkEvent.newBuilder() to construct.
    private ReplayChunkEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReplayChunkEvent() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReplayChunkEvent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ReplayChunkEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              data_ = input.readBytes();
              break;
            }
            case 18: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (duration_ != null) {
                subBuilder = duration_.toBuilder();
              }
              duration_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(duration_);
                duration_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayChunkEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayChunkEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.class, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * The raw data of the ReplayChunkEvent.
     * </pre>
     *
     * <code>bytes data = 1 [(.v1.field_options) = { ... }</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private com.google.protobuf.Duration duration_;
    /**
     * <pre>
     * The time duration over which the data in this ReplayChunkEvent was transferred.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
     * @return Whether the duration field is set.
     */
    @java.lang.Override
    public boolean hasDuration() {
      return duration_ != null;
    }
    /**
     * <pre>
     * The time duration over which the data in this ReplayChunkEvent was transferred.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
     * @return The duration.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getDuration() {
      return duration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : duration_;
    }
    /**
     * <pre>
     * The time duration over which the data in this ReplayChunkEvent was transferred.
     * </pre>
     *
     * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getDurationOrBuilder() {
      return getDuration();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!data_.isEmpty()) {
        output.writeBytes(1, data_);
      }
      if (duration_ != null) {
        output.writeMessage(2, getDuration());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      if (duration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDuration());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent)) {
        return super.equals(obj);
      }
      com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent other = (com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent) obj;

      if (!getData()
          .equals(other.getData())) return false;
      if (hasDuration() != other.hasDuration()) return false;
      if (hasDuration()) {
        if (!getDuration()
            .equals(other.getDuration())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      if (hasDuration()) {
        hash = (37 * hash) + DURATION_FIELD_NUMBER;
        hash = (53 * hash) + getDuration().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A ReplayChunkEvent represents a single event within a query replay.
     * The timing information included in each ReplayChunkEvent may be used to replay a session in real time.
     * </pre>
     *
     * Protobuf type {@code v1.ReplayChunkEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v1.ReplayChunkEvent)
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayChunkEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayChunkEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.class, com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.Builder.class);
      }

      // Construct using com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;

        if (durationBuilder_ == null) {
          duration_ = null;
        } else {
          duration_ = null;
          durationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.internal_static_v1_ReplayChunkEvent_descriptor;
      }

      @java.lang.Override
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent getDefaultInstanceForType() {
        return com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent build() {
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent buildPartial() {
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent result = new com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent(this);
        result.data_ = data_;
        if (durationBuilder_ == null) {
          result.duration_ = duration_;
        } else {
          result.duration_ = durationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent) {
          return mergeFrom((com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent other) {
        if (other == com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent.getDefaultInstance()) return this;
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (other.hasDuration()) {
          mergeDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The raw data of the ReplayChunkEvent.
       * </pre>
       *
       * <code>bytes data = 1 [(.v1.field_options) = { ... }</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * The raw data of the ReplayChunkEvent.
       * </pre>
       *
       * <code>bytes data = 1 [(.v1.field_options) = { ... }</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The raw data of the ReplayChunkEvent.
       * </pre>
       *
       * <code>bytes data = 1 [(.v1.field_options) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private com.google.protobuf.Duration duration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationBuilder_;
      /**
       * <pre>
       * The time duration over which the data in this ReplayChunkEvent was transferred.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
       * @return Whether the duration field is set.
       */
      public boolean hasDuration() {
        return durationBuilder_ != null || duration_ != null;
      }
      /**
       * <pre>
       * The time duration over which the data in this ReplayChunkEvent was transferred.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
       * @return The duration.
       */
      public com.google.protobuf.Duration getDuration() {
        if (durationBuilder_ == null) {
          return duration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : duration_;
        } else {
          return durationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The time duration over which the data in this ReplayChunkEvent was transferred.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder setDuration(com.google.protobuf.Duration value) {
        if (durationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          duration_ = value;
          onChanged();
        } else {
          durationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The time duration over which the data in this ReplayChunkEvent was transferred.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder setDuration(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (durationBuilder_ == null) {
          duration_ = builderForValue.build();
          onChanged();
        } else {
          durationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The time duration over which the data in this ReplayChunkEvent was transferred.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder mergeDuration(com.google.protobuf.Duration value) {
        if (durationBuilder_ == null) {
          if (duration_ != null) {
            duration_ =
              com.google.protobuf.Duration.newBuilder(duration_).mergeFrom(value).buildPartial();
          } else {
            duration_ = value;
          }
          onChanged();
        } else {
          durationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The time duration over which the data in this ReplayChunkEvent was transferred.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
       */
      public Builder clearDuration() {
        if (durationBuilder_ == null) {
          duration_ = null;
          onChanged();
        } else {
          duration_ = null;
          durationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The time duration over which the data in this ReplayChunkEvent was transferred.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
       */
      public com.google.protobuf.Duration.Builder getDurationBuilder() {
        
        onChanged();
        return getDurationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The time duration over which the data in this ReplayChunkEvent was transferred.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
       */
      public com.google.protobuf.DurationOrBuilder getDurationOrBuilder() {
        if (durationBuilder_ != null) {
          return durationBuilder_.getMessageOrBuilder();
        } else {
          return duration_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : duration_;
        }
      }
      /**
       * <pre>
       * The time duration over which the data in this ReplayChunkEvent was transferred.
       * </pre>
       *
       * <code>.google.protobuf.Duration duration = 2 [(.v1.field_options) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getDurationFieldBuilder() {
        if (durationBuilder_ == null) {
          durationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getDuration(),
                  getParentForChildren(),
                  isClean());
          duration_ = null;
        }
        return durationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:v1.ReplayChunkEvent)
    }

    // @@protoc_insertion_point(class_scope:v1.ReplayChunkEvent)
    private static final com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent();
    }

    public static com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReplayChunkEvent>
        PARSER = new com.google.protobuf.AbstractParser<ReplayChunkEvent>() {
      @java.lang.Override
      public ReplayChunkEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReplayChunkEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReplayChunkEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReplayChunkEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongdm.api.plumbing.ReplaysPlumbing.ReplayChunkEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v1_ReplayListRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v1_ReplayListRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v1_ReplayListResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v1_ReplayListResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v1_ReplayChunk_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v1_ReplayChunk_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v1_ReplayChunkEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v1_ReplayChunkEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rreplays.proto\022\002v1\032\036google/protobuf/dur" +
      "ation.proto\032\roptions.proto\032\nspec.proto\"V" +
      "\n\021ReplayListRequest\022%\n\004meta\030\001 \001(\0132\027.v1.L" +
      "istRequestMetadata\022\032\n\006filter\030\002 \001(\tB\n\362\370\263\007" +
      "\005\260\363\263\007\001\"\302\001\n\022ReplayListResponse\022&\n\004meta\030\001 " +
      "\001(\0132\030.v1.ListResponseMetadata\022+\n\006chunks\030" +
      "\002 \003(\0132\017.v1.ReplayChunkB\n\362\370\263\007\005\270\363\263\007\001\022W\n\nra" +
      "te_limit\030\003 \001(\0132\025.v1.RateLimitMetadataB,\362" +
      "\370\263\007\005\260\363\263\007\001\362\370\263\007\006\262\364\263\007\001*\362\370\263\007\022\262\364\263\007\r!json_gate" +
      "way\"e\n\013ReplayChunk\022\030\n\004data\030\001 \001(\014B\n\362\370\263\007\005\260" +
      "\363\263\007\001\0220\n\006events\030\002 \003(\0132\024.v1.ReplayChunkEve" +
      "ntB\n\362\370\263\007\005\260\363\263\007\001:\n\372\370\263\007\005\250\363\263\007\001\"q\n\020ReplayChun" +
      "kEvent\022\030\n\004data\030\001 \001(\014B\n\362\370\263\007\005\260\363\263\007\001\0227\n\010dura" +
      "tion\030\002 \001(\0132\031.google.protobuf.DurationB\n\362" +
      "\370\263\007\005\260\363\263\007\001:\n\372\370\263\007\005\250\363\263\007\0012\205\001\n\007Replays\022Y\n\004Lis" +
      "t\022\025.v1.ReplayListRequest\032\026.v1.ReplayList" +
      "Response\"\"\202\371\263\007\010\242\363\263\007\003get\202\371\263\007\020\252\363\263\007\013/v1/rep" +
      "lays\032\037\312\371\263\007\020\302\371\263\007\013ReplayChunk\312\371\263\007\005\330\371\263\007\001Bc\n" +
      "\031com.strongdm.api.plumbingB\017ReplaysPlumb" +
      "ingZ5github.com/strongdm/strongdm-sdk-go" +
      "/v3/internal/v1;v1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.DurationProto.getDescriptor(),
          com.strongdm.api.plumbing.Options.getDescriptor(),
          com.strongdm.api.plumbing.Spec.getDescriptor(),
        });
    internal_static_v1_ReplayListRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_v1_ReplayListRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v1_ReplayListRequest_descriptor,
        new java.lang.String[] { "Meta", "Filter", });
    internal_static_v1_ReplayListResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_v1_ReplayListResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v1_ReplayListResponse_descriptor,
        new java.lang.String[] { "Meta", "Chunks", "RateLimit", });
    internal_static_v1_ReplayChunk_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_v1_ReplayChunk_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v1_ReplayChunk_descriptor,
        new java.lang.String[] { "Data", "Events", });
    internal_static_v1_ReplayChunkEvent_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_v1_ReplayChunkEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v1_ReplayChunkEvent_descriptor,
        new java.lang.String[] { "Data", "Duration", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.strongdm.api.plumbing.Options.fieldOptions);
    registry.add(com.strongdm.api.plumbing.Options.messageOptions);
    registry.add(com.strongdm.api.plumbing.Options.methodOptions);
    registry.add(com.strongdm.api.plumbing.Options.serviceOptions);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.DurationProto.getDescriptor();
    com.strongdm.api.plumbing.Options.getDescriptor();
    com.strongdm.api.plumbing.Spec.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
